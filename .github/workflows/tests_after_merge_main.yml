# yamllint disable rule:line-length rule:comments-indentation rule:comments
---
name: Coverage Tests and Bagde Generation

on:
  push:
   branches:
     - main
     - master

jobs:
  test-suite:
    runs-on: ubuntu-latest
    env:
      MIN_COVER: 80
      PER_COVER: 95
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
          check-latest: true
      
      #- name: Test Build
      #  run: |
      #    go mod tidy
      #    make build
      #- name: Package Unit Tests
      #  run: |
      #    make tests-pkg
      #    echo "PER_COVER=`go tool cover -func coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}'`" >> $GITHUB_ENV
      #    make clean-tests

      - name: Generate Badge
        run: |
          git checkout -b update-badges
          curl https://img.shields.io/badge/minimum_coverage-${{ env.MIN_COVER }}%25-yellowgreen > min-coverage.svg
          curl https://img.shields.io/badge/current_coverage-${{ env.PER_COVER }}%25-yellowgreen > cur-coverage.svg
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
          git add -A
          git commit -m "chore(badge): Add code coverage report" || echo "allways true"
          git push origin update-badges
      - name: Create Pull Request
        id: pr-badges
        uses: peter-evans/create-pull-request@v4
        with:
          branch: update-badges
          delete-branch: true
          title: '[skip ci] Update report'
          draft: false
      - name: Approve Pull Request
        uses: juliangruber/approve-pull-request-action@v2.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr-badges.outputs.pull-request-number }}
      - name: Merge Pull Request
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.pr-badges.outputs.pull-request-number }}
          method: squash
      - name: Delete Branch
        if: always()
        run: git push origin --delete update-badges
